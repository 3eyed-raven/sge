// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sge/orderbook/orderbookevent.proto

package types

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type OrderBookEvent struct {
	ParticipationExposure []*ParticipationExposure `protobuf:"bytes,2,rep,name=participationExposure,proto3" json:"participationExposure,omitempty"`
	OrderBookOddsExposure []*OrderBookOddsExposure `protobuf:"bytes,3,rep,name=orderBookOddsExposure,proto3" json:"orderBookOddsExposure,omitempty"`
}

func (m *OrderBookEvent) Reset()         { *m = OrderBookEvent{} }
func (m *OrderBookEvent) String() string { return proto.CompactTextString(m) }
func (*OrderBookEvent) ProtoMessage()    {}
func (*OrderBookEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2964b6b825b1bad, []int{0}
}

func (m *OrderBookEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *OrderBookEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OrderBookEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *OrderBookEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBookEvent.Merge(m, src)
}

func (m *OrderBookEvent) XXX_Size() int {
	return m.Size()
}

func (m *OrderBookEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBookEvent.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBookEvent proto.InternalMessageInfo

func (m *OrderBookEvent) GetParticipationExposure() []*ParticipationExposure {
	if m != nil {
		return m.ParticipationExposure
	}
	return nil
}

func (m *OrderBookEvent) GetOrderBookOddsExposure() []*OrderBookOddsExposure {
	if m != nil {
		return m.OrderBookOddsExposure
	}
	return nil
}

func init() {
	proto.RegisterType((*OrderBookEvent)(nil), "sgenetwork.sge.orderbook.OrderBookEvent")
}

func init() {
	proto.RegisterFile("sge/orderbook/orderbookevent.proto", fileDescriptor_c2964b6b825b1bad)
}

var fileDescriptor_c2964b6b825b1bad = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2a, 0x4e, 0x4f, 0xd5,
	0xcf, 0x2f, 0x4a, 0x49, 0x2d, 0x4a, 0xca, 0xcf, 0xcf, 0x46, 0xb0, 0x52, 0xcb, 0x52, 0xf3, 0x4a,
	0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x24, 0x8a, 0xd3, 0x53, 0xf3, 0x52, 0x4b, 0xca, 0xf3,
	0x8b, 0xb2, 0xf5, 0x8a, 0xd3, 0x53, 0xf5, 0xe0, 0x8a, 0xa4, 0x44, 0xd2, 0xf3, 0xd3, 0xf3, 0xc1,
	0x8a, 0xf4, 0x41, 0x2c, 0x88, 0x7a, 0x29, 0x59, 0x1c, 0x66, 0x42, 0xa5, 0x15, 0x51, 0xa5, 0x0b,
	0x12, 0x8b, 0x4a, 0x32, 0x93, 0x33, 0x0b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0xa0, 0x4a, 0x64, 0x50,
	0x95, 0xa4, 0x56, 0x14, 0xe4, 0x17, 0x97, 0x16, 0xa5, 0x42, 0x64, 0x95, 0xee, 0x31, 0x72, 0xf1,
	0xf9, 0x83, 0x24, 0x9d, 0xf2, 0xf3, 0xb3, 0x5d, 0x41, 0x0e, 0x15, 0x4a, 0xe5, 0x12, 0x45, 0x31,
	0xc7, 0x15, 0xaa, 0x43, 0x82, 0x49, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x5f, 0x0f, 0x97, 0x17, 0xf4,
	0x02, 0xb0, 0x69, 0x0b, 0xc2, 0x6e, 0x1a, 0xc8, 0x9a, 0x7c, 0x98, 0xc5, 0xfe, 0x29, 0x29, 0xc5,
	0x70, 0x6b, 0x98, 0x09, 0x59, 0xe3, 0x8f, 0x4d, 0x5b, 0x10, 0x76, 0xd3, 0x9c, 0xdc, 0x4e, 0x3c,
	0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e,
	0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21, 0x4a, 0x27, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49,
	0x2f, 0x39, 0x3f, 0x57, 0xbf, 0x38, 0x3d, 0x55, 0x17, 0x6a, 0x19, 0x88, 0xad, 0x5f, 0x81, 0x14,
	0x62, 0x25, 0x95, 0x05, 0xa9, 0xc5, 0x49, 0x6c, 0xe0, 0xf0, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xc6, 0x24, 0x78, 0x18, 0xe5, 0x01, 0x00, 0x00,
}

func (m *OrderBookEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OrderBookEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OrderBookEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OrderBookOddsExposure) > 0 {
		for iNdEx := len(m.OrderBookOddsExposure) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OrderBookOddsExposure[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintOrderbookevent(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ParticipationExposure) > 0 {
		for iNdEx := len(m.ParticipationExposure) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ParticipationExposure[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintOrderbookevent(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintOrderbookevent(dAtA []byte, offset int, v uint64) int {
	offset -= sovOrderbookevent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

func (m *OrderBookEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ParticipationExposure) > 0 {
		for _, e := range m.ParticipationExposure {
			l = e.Size()
			n += 1 + l + sovOrderbookevent(uint64(l))
		}
	}
	if len(m.OrderBookOddsExposure) > 0 {
		for _, e := range m.OrderBookOddsExposure {
			l = e.Size()
			n += 1 + l + sovOrderbookevent(uint64(l))
		}
	}
	return n
}

func sovOrderbookevent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

func sozOrderbookevent(x uint64) (n int) {
	return sovOrderbookevent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

func (m *OrderBookEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOrderbookevent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OrderBookEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OrderBookEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParticipationExposure", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderbookevent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOrderbookevent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOrderbookevent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParticipationExposure = append(m.ParticipationExposure, &ParticipationExposure{})
			if err := m.ParticipationExposure[len(m.ParticipationExposure)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderBookOddsExposure", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOrderbookevent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOrderbookevent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthOrderbookevent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderBookOddsExposure = append(m.OrderBookOddsExposure, &OrderBookOddsExposure{})
			if err := m.OrderBookOddsExposure[len(m.OrderBookOddsExposure)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOrderbookevent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOrderbookevent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func skipOrderbookevent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOrderbookevent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOrderbookevent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOrderbookevent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOrderbookevent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOrderbookevent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOrderbookevent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOrderbookevent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOrderbookevent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOrderbookevent = fmt.Errorf("proto: unexpected end of group")
)
